/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as OnboardingRouteImport } from './routes/_onboarding'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingSignupRouteImport } from './routes/_onboarding/signup'
import { Route as OnboardingLoginRouteImport } from './routes/_onboarding/login'
import { Route as mainUserIdIndexRouteImport } from './routes/(main)/$userId/index'
import { Route as ApiEmbedVisitorRouteImport } from './routes/api/embed/visitor'
import { Route as ApiEmbedValidateRouteImport } from './routes/api/embed/validate'
import { Route as mainUserIdVehicleIdIndexRouteImport } from './routes/(main)/$userId/$vehicleId/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const OnboardingRoute = OnboardingRouteImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingSignupRoute = OnboardingSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => OnboardingRoute,
} as any)
const OnboardingLoginRoute = OnboardingLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => OnboardingRoute,
} as any)
const mainUserIdIndexRoute = mainUserIdIndexRouteImport.update({
  id: '/(main)/$userId/',
  path: '/$userId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiEmbedVisitorRoute = ApiEmbedVisitorRouteImport.update({
  id: '/api/embed/visitor',
  path: '/api/embed/visitor',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiEmbedValidateRoute = ApiEmbedValidateRouteImport.update({
  id: '/api/embed/validate',
  path: '/api/embed/validate',
  getParentRoute: () => rootRouteImport,
} as any)
const mainUserIdVehicleIdIndexRoute =
  mainUserIdVehicleIdIndexRouteImport.update({
    id: '/(main)/$userId/$vehicleId/',
    path: '/$userId/$vehicleId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof OnboardingLoginRoute
  '/signup': typeof OnboardingSignupRoute
  '/api/embed/validate': typeof ApiEmbedValidateRoute
  '/api/embed/visitor': typeof ApiEmbedVisitorRoute
  '/$userId': typeof mainUserIdIndexRoute
  '/$userId/$vehicleId': typeof mainUserIdVehicleIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof OnboardingLoginRoute
  '/signup': typeof OnboardingSignupRoute
  '/api/embed/validate': typeof ApiEmbedValidateRoute
  '/api/embed/visitor': typeof ApiEmbedVisitorRoute
  '/$userId': typeof mainUserIdIndexRoute
  '/$userId/$vehicleId': typeof mainUserIdVehicleIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_onboarding': typeof OnboardingRouteWithChildren
  '/_onboarding/login': typeof OnboardingLoginRoute
  '/_onboarding/signup': typeof OnboardingSignupRoute
  '/api/embed/validate': typeof ApiEmbedValidateRoute
  '/api/embed/visitor': typeof ApiEmbedVisitorRoute
  '/(main)/$userId/': typeof mainUserIdIndexRoute
  '/(main)/$userId/$vehicleId/': typeof mainUserIdVehicleIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/api/embed/validate'
    | '/api/embed/visitor'
    | '/$userId'
    | '/$userId/$vehicleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/api/embed/validate'
    | '/api/embed/visitor'
    | '/$userId'
    | '/$userId/$vehicleId'
  id:
    | '__root__'
    | '/'
    | '/_onboarding'
    | '/_onboarding/login'
    | '/_onboarding/signup'
    | '/api/embed/validate'
    | '/api/embed/visitor'
    | '/(main)/$userId/'
    | '/(main)/$userId/$vehicleId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OnboardingRoute: typeof OnboardingRouteWithChildren
  ApiEmbedValidateRoute: typeof ApiEmbedValidateRoute
  ApiEmbedVisitorRoute: typeof ApiEmbedVisitorRoute
  mainUserIdIndexRoute: typeof mainUserIdIndexRoute
  mainUserIdVehicleIdIndexRoute: typeof mainUserIdVehicleIdIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/signup': {
      id: '/_onboarding/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof OnboardingSignupRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/_onboarding/login': {
      id: '/_onboarding/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof OnboardingLoginRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/(main)/$userId/': {
      id: '/(main)/$userId/'
      path: '/$userId'
      fullPath: '/$userId'
      preLoaderRoute: typeof mainUserIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/embed/visitor': {
      id: '/api/embed/visitor'
      path: '/api/embed/visitor'
      fullPath: '/api/embed/visitor'
      preLoaderRoute: typeof ApiEmbedVisitorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/embed/validate': {
      id: '/api/embed/validate'
      path: '/api/embed/validate'
      fullPath: '/api/embed/validate'
      preLoaderRoute: typeof ApiEmbedValidateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(main)/$userId/$vehicleId/': {
      id: '/(main)/$userId/$vehicleId/'
      path: '/$userId/$vehicleId'
      fullPath: '/$userId/$vehicleId'
      preLoaderRoute: typeof mainUserIdVehicleIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface OnboardingRouteChildren {
  OnboardingLoginRoute: typeof OnboardingLoginRoute
  OnboardingSignupRoute: typeof OnboardingSignupRoute
}

const OnboardingRouteChildren: OnboardingRouteChildren = {
  OnboardingLoginRoute: OnboardingLoginRoute,
  OnboardingSignupRoute: OnboardingSignupRoute,
}

const OnboardingRouteWithChildren = OnboardingRoute._addFileChildren(
  OnboardingRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardingRoute: OnboardingRouteWithChildren,
  ApiEmbedValidateRoute: ApiEmbedValidateRoute,
  ApiEmbedVisitorRoute: ApiEmbedVisitorRoute,
  mainUserIdIndexRoute: mainUserIdIndexRoute,
  mainUserIdVehicleIdIndexRoute: mainUserIdVehicleIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
